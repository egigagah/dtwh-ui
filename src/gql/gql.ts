/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n    query getDashboards($tahun: [Int!], $status: String) {\n        getDashboards(tahun: $tahun, status: $status) {\n            tahun\n            status\n            pieStatusAggregate {\n                label: _id\n                value\n            }\n            totalIzinAggregate {\n                value\n            }\n            bidangSumAggregate {\n                label: _id\n                value\n            }\n            barTableAggregate {\n                kode: kode\n                label: _id\n                selesai\n                ditolak\n            }\n            lineStatusAggregate {\n                id: _id\n                data {\n                    x\n                    y\n                }\n            }\n            lineStatusCsv {\n                bulan\n                ditolak\n                selesai\n            }\n        }\n    }\n": types.GetDashboardsDocument,
    "\n    query lineStatusCsvAggregate($tahun: [Int!]) {\n        lineStatusCsvAggregate(tahun: $tahun) {\n            bulan: _id\n            ditolak\n            selesai\n        }\n    }\n": types.LineStatusCsvAggregateDocument,
};

export function graphql(source: "\n    query getDashboards($tahun: [Int!], $status: String) {\n        getDashboards(tahun: $tahun, status: $status) {\n            tahun\n            status\n            pieStatusAggregate {\n                label: _id\n                value\n            }\n            totalIzinAggregate {\n                value\n            }\n            bidangSumAggregate {\n                label: _id\n                value\n            }\n            barTableAggregate {\n                kode: kode\n                label: _id\n                selesai\n                ditolak\n            }\n            lineStatusAggregate {\n                id: _id\n                data {\n                    x\n                    y\n                }\n            }\n            lineStatusCsv {\n                bulan\n                ditolak\n                selesai\n            }\n        }\n    }\n"): (typeof documents)["\n    query getDashboards($tahun: [Int!], $status: String) {\n        getDashboards(tahun: $tahun, status: $status) {\n            tahun\n            status\n            pieStatusAggregate {\n                label: _id\n                value\n            }\n            totalIzinAggregate {\n                value\n            }\n            bidangSumAggregate {\n                label: _id\n                value\n            }\n            barTableAggregate {\n                kode: kode\n                label: _id\n                selesai\n                ditolak\n            }\n            lineStatusAggregate {\n                id: _id\n                data {\n                    x\n                    y\n                }\n            }\n            lineStatusCsv {\n                bulan\n                ditolak\n                selesai\n            }\n        }\n    }\n"];
export function graphql(source: "\n    query lineStatusCsvAggregate($tahun: [Int!]) {\n        lineStatusCsvAggregate(tahun: $tahun) {\n            bulan: _id\n            ditolak\n            selesai\n        }\n    }\n"): (typeof documents)["\n    query lineStatusCsvAggregate($tahun: [Int!]) {\n        lineStatusCsvAggregate(tahun: $tahun) {\n            bulan: _id\n            ditolak\n            selesai\n        }\n    }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;